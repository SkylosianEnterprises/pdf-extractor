#!/usr/bin/perl
use strict;
use warnings;
use IO::File;
use Data::Dumper;
use YAML qw/LoadFile/;

use Text::CSV;

my @a;

my $datafilename = shift @ARGV;

my $fh = IO::File->new($datafilename);

my $out = IO::Handle->new();
$out->fdopen(fileno(STDOUT),"w");

my $csv = Text::CSV->new;
while (<$fh>) {
  $csv->parse($_);
  my ($mapfile, $file, $page, $x, $y, $text, $font, $size) = $csv->fields;
  next unless $mapfile;
  foreach my $field_name (range_lookup($x, $y, $font, $size, rangemap($mapfile))) {
    $csv->print($out, [$file, $page, $x, $y, $text, $field_name]);
    $out->print("\n");
  }
}


my $maps;
sub rangemap {
  my ($mapfile, $font) = @_;
  return $maps->{$mapfile} if exists $maps->{$mapfile};
  my ($arrayref) = LoadFile("maps/$mapfile") if -f "maps/$mapfile";
  $maps->{$mapfile} = $arrayref;
}

sub range_lookup {
  my ($x, $y, $font, $size, $map) = @_;
  foreach my $fontmap (grep { $font eq $_->{font} } @{$map}) {
    foreach (@{$fontmap->{boxes}}) {
      if ($y >= $_->{bottom} && $y <= $_->{top} && $x >= $_->{left} && $x <= $_->{right}) {
        return $_->{field};
      }
    }
  }
  return;
}


